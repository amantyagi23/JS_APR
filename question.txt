1. Wap to convert temp to celsius from fahrenheit
77f = 'celsius
formula =  5/9 *( temp -32);
using function 1 parameter =  temp 
log
99 100 102 =  32 33 34


reverse celsius convert fahrenheit

2. Wap to check which no. is greater then among 3 number

a = 
b = 
c = 


3 Wap to check is age is 18 plus or not
 var age =   

4. WAP to check year is a year is greater the 2000 or not ?

5. wap to check number is even or odd ? 

6. Wap a fissbuss program 
if( number is divide by 3 ) then it is a fiss
if( number is divide by 5 ) the number is buss
else all are fissbuss

7. WAP to check the which operation is to preform 

1. if( a is zero then print zero and soon)
like if a is 3 then print three upto 0-9 and else not valid number


8 > wap to check the week days 
ex = 0 = sunday
1 = monday
2
3
4
5
6 =  sat

9. wap to display greet message If time is less than 10:00 AM, 
create a "Good morning" greeting,
if not, 
but time is less than 12:00PM, create a "Good day" greeting, 
time is less than 07:00PM a "Good evening",
time is less than 12:00AM a "Good Night",

9 Check if a number is odd or even in JavaScript
Function `isEvenOrOdd()` checks if input number is even or odd by using “%” operator in JavaScript.

Print “Number is even” if the number is divisible by 2.
Else print “Number is odd” if the number returns a remainder when divided by 2.


10. Check if input variable is a number or not
Function `isNumber()` checks if input variable is a number by using isNaN() in-built JavaScript function. Read more about isNan() from w3schools.com/jsref/jsref_isnan.asp.

Print “Variable is not a number” if isNaN() returns true.
Else print “Variable is a valid number” if isNaN() returns false.

11. Find the largest of two number
Function `findLargest()` finds the largest between two number by using “>” and “=” operator in JavaScript.

Print num1 is the largest if num1>num2.
Print num2 is the largest if num1<num2.
Else print num1 and num2 are equal when num1==num2.

12.  Find the largest of three number
Function `findLargest()` finds the largest of three number by using “>” and “&&” operator in JavaScript.

Print num1 is the largest if num1>num2 and num1>num3.
Print num2 is the largest if num2<num3.
Else print num3.

13. find the grade for input marks
Function `findGrade()` to find the grade of the student based on the input marks.

Print “S grade” if marks is between 90 and 100.
Print “A grade” if marks is between 80 and 90.
Print “B grade” if marks is between 70 and 80.
Print “C grade” if marks is between 60 and 70.
Print “D grade” if marks is between 50 and 60.
Print “E grade” if marks is between 40 and 50.
Print “Student has failed” if marks is between 0 and 40.
Else print “Invalid marks”.


14. WAP to create a calculator using switch case in which
var  a = 2;

if choose  is 1 then add two value operators
if choose  is 2 then subtaction two value
if choose  is 3 then multiply two value
if choose  is 4 then divide two value
if choose  is 5 then modules two value


15 > wap to check the week days using switch case 
ex = 0 = sunday
1 = monday
2
3
4
5
6 =  sat

16. WAP to print 1 to 10 using for loop.
17. WAP to print multiple of 2's up to 10 times

 2
 4
 6
 8
 10
 12
 14
 16
 18
 20
17. Wap to print and check whic no. even no. upto n = 100
18. WAP to print odd no upto n = 100
19. WAP to print table of 5x1 = 5 using for loop 

// While loop

21. write a program to print 1 to 20 number using while loop..
22. write a program to print even number up to 100 using while loop;
WAP to print multiple of 2's up to 10 times

 2
 4
 6
 8
 10
 12
 14
 16
 18
 20

 wap to print digit count of a given digit using while loop 
 ex-> n = 56781176
 digitcount = 8

var count  = 0;
count = count + 1;   // count = 0+1; => count = 1




 Wap to print reverse of a given number 
 ex = n = 123456
 output = 654321

 n = 341289
 output = 982143


for loop question
 wap to print weather a number is prime or not 

 ex-> n = 13
 output  = Prime Number

 n = 28 
 output = Not A Prime Number 


 palinedrome Number

 num = 123
 rev = 321 

 not a palinedrome number

 num = 121
 rev = 121
 palinedrome number 

 armstrong number

 input 153 = num  = 1^3 + 5^3 + 3^3 = 1*1*1 + 5*5*5 + 3*3*3
                                      1 + 125 + 27
                                      126 + 27
                                      153  

input 370 = num = 3^3 + 7^3 + 0^3 = 3*3*3 + 7*7*7 + 0*0*0
                                    27 + 343 + 0
                                    370

WAP to check and print primenumbers between 2 to n;
n= 100;
n= 500;
n= 1000;


WAP to check and print reverse number between 10 to n;
n= 100;
n= 500;
n= 1000;


WAP to check and print palinedrome number between 10 to n;
n= 100;
n= 500;
n= 1000;

WAP to check and print armstrong number between 10 to n;
n= 100;
n= 500;
n= 1000;



Patterns Programing for loops

Pattern1

* * * * *
* * * * *
* * * * *
* * * * *
* * * * *

Pattern2

1 2 3 4 5 
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5

pattern3

1 1 1 1 1
2 2 2 2 2 
3 3 3 3 3
4 4 4 4 4
5 5 5 5 5

pattern4

1 * 3 * 5
1 * 3 * 5
1 * 3 * 5
1 * 3 * 5
1 * 3 * 5

pattern5

1 1 1 1 1
* * * * *
3 3 3 3 3
* * * * *
5 5 5 5 5


pattern6
n = 5

*
* *
* * *
* * * *
* * * * *


1
1 2
1 2 3
1 2 3 4
1 2 3 4 5

as hw

1
2 2
3 3 3 
4 4 4 4
5 5 5 5 5



1
* *
3 3 3
* * * *
5 5 5 5 5


var a = a++

1
2 3
4 5 6
7 8 9 10
11 12 13 14 15

1
2 1
3 2 1
4 3 2 1
5 4 3 2 1


1
* 1
3 * 1
* 3 * 1
5 * 3 * 1


var n = 5;
n -row
* * * * *
* * * *
* * *
* *
*

12345
1234
123
12
1

54321
4321
321
21
1


        *
      * *
    * * *
  * * * *
* * * * *


        1
      1 2
    1 2 3
  1 2 3 4
1 2 3 4 5


        5
      5 4
    5 4 3
  5 4 3 2
5 4 3 2 1



        *
      * * *
    * * * * *
  * * * * * * *
* * * * * * * * *


        1
      1 2 1
    1 2 3 2 1
  1 2 3 4 3 2 1
1 2 3 4 5 4 3 2 1


        1
      1 * 1
    1 * 3 * 1
  1 * 3 * 3 * 1
1 * 3 * 5 * 3 * 1




* * * * *
  * * * *
    * * *
      * *
        *


1 2 3 4 5
  1 2 3 4
    1 2 3
      1 2
        1



* * * * * * * * *
  * * * * * * *
    * * * * *
      * * *
        *




* * * * *
*       *
*       *
*       *
* * * * *



  * * * 
*       *
*   *   *
*       *
  * * * 


    *
    *
* * * * *
    *
    *



        *
      * * *
    * * * * *
  * * * * * * *
* * * * * * * * *
  * * * * * * *
    * * * * *
      * * *
        *


1 2 3 3 5 4 3 2 1
  1 2 3 4 3 2 1
    1 2 3 2 1
      1 2 1
        1